<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
-->

<MDIWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
			xmlns="flexlib.mdi.containers.*"
			xmlns:flc="flexlib.controls.*"
			implements="org.bigbluebutton.common.IBbbModuleWindow"
			title="Arquivos"
			creationComplete="onCreationComplete()" 
			xmlns:mate="http://mate.asfusion.com/" xmlns:controls="flexlib.controls.*">
	
	<mate:Listener type="{ListenersEvent.ROOM_MUTE_STATE}" method="roomMuteStateChange" />
	<mate:Listener type="{ListenersEvent.REGISTER_LISTENERS}" method="registerListeners" />
	<mate:Listener type="{ListenersEvent.SET_LOCAL_MODERATOR_STATUS}" method="{setModerator}" />
	<mate:Listener type="{LocaleChangeEvent.LOCALE_CHANGED}" method="localeChanged" />
	
	<mx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			import flash.sampler.getInvocationCount;
			
			import flexlib.mdi.events.MDIWindowEvent;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.controls.Label;
			import mx.events.ListEvent;
			import mx.messaging.channels.AMFChannel;
			
			import org.bigbluebutton.common.Images;
			import org.bigbluebutton.common.events.LocaleChangeEvent;
			import org.bigbluebutton.core.managers.UserManager;
			import org.bigbluebutton.main.views.MainCanvas;
			import org.bigbluebutton.modules.listeners.events.ListenersCommand;
			import org.bigbluebutton.modules.listeners.events.ListenersEvent;
			import org.bigbluebutton.modules.listeners.model.ListenerOptions;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			
			private var images:Images= new Images();			
			private var _xPosition:int;
			private var _yPosition:int;
 			
			[Bindable] private var muteAllIcon:Class = images.sound_mute; 
			[Bindable] private var unmuteAllIcon:Class = images.sound_none;
			[Bindable] private var kickIcon:Class = images.eject_user;
			[Bindable] public var listeners:ArrayCollection = new ArrayCollection();
			[Bindable] public var moderator:Boolean;
			[Bindable] private var windowTitle:String = ResourceUtil.getInstance().getString('bbb.listeners.title', ["",""]);			
			[Bindable] public var listenerOptions:ListenerOptions;
			[Bindable] private var showPushToTalkBtn:Boolean = UserManager.getInstance().getConference().voiceLocked &&
				UserManager.getInstance().getConference().voiceJoined;
			
			private function onCreationComplete():void {
			
			}
			
			private function updateShowPushToTalkBtn(show:Boolean):void {
			}
			
			private function updateNumberOfListeners(numListeners:int):void {
			}
			
			public function getPrefferedPosition():String{
			}
			
			public function setMuteState(mute:Boolean):void{
			}
			
			private function toggleMuteState():void{
			}
			
			private function toggleMuteMeState():void{
			}
			
			private function muteAllListeners():void{
			}
			
			private function unmuteAllListeners():void{
			}
			
			private function roomMuteStateChange(e:ListenersEvent):void{
			}
			
			private function registerListeners(e:ListenersEvent):void{
			}
			
			private function setModerator(e:ListenersEvent):void{
			}
						
			private function onItemRollOver(e:ListEvent):void{
			}
			
			private function onItemRollOut(e:ListEvent):void{
			}
			
			override protected function resourcesChanged():void{
			}
			
			private function localeChanged(e:LocaleChangeEvent):void{
			}
		]]>
	</mx:Script>
	
	<mx:DataGrid id="viewersGrid" dataProvider="{files}" editable="false"
				 dragEnabled="false" rightClick="" width="100%" height="100%"
				 itemRollOver="onItemRollOver(event)" itemRollOut="onItemRollOut(event)">
		<mx:columns>
			<mx:DataGridColumn dataField="role" headerText="Nome" dataTipField="Nome do Arquivo" editable="false" width="35"
							   itemRenderer="org.bigbluebutton.modules.viewers.views.RoleItemRenderer" sortable="false" id="roleField"/>
			<mx:DataGridColumn dataField="name" headerText="{ResourceUtil.getInstance().getString('bbb.viewers.viewersGrid.nameItemRenderer')}" editable="true" width="100" sortable="false"
							   itemRenderer="org.bigbluebutton.modules.viewers.views.NameItemRenderer"/>
			<mx:DataGridColumn dataField="status" headerText="{ResourceUtil.getInstance().getString('bbb.viewers.viewersGrid.statusItemRenderer')}" sortable="false"
							   itemRenderer="org.bigbluebutton.modules.viewers.views.StatusItemRenderer"/>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:ControlBar width="100%"> 
		<mx:Button id="presentBtn" label="" visible="{isModerator}" width="130" height="20"
				   toolTip="Adicionar arquivos"
				   click="addFilesClick()"/>
	</mx:ControlBar>  
</MDIWindow>
